{"ast":null,"code":"import _objectSpread from \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/Components/Auth/Signin.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\nimport { SIGNIN_USER } from \"../../queries\";\nconst initialState = {\n  username: \"\",\n  password: \"\"\n};\n\nclass Signin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n\n    this.clearState = () => {\n      this.setState(_objectSpread({}, initialState));\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = (event, SigninUser) => {\n      event.preventDefault();\n      SigninUser().then(async ({\n        data\n      }) => {\n        // console.log(data);\n        localStorage.setItem(\"token\", data.signinUser.token);\n        await this.props.refetch();\n        this.clearState();\n        this.props.history.push(\"/\");\n      });\n    };\n\n    this.validateForm = () => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      const isInvalid = !username || !password;\n      return isInvalid;\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Signin\"), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Mutation, {\n      mutation: SIGNIN_USER,\n      variables: {\n        username,\n        password\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, (SigninUser, {\n      data,\n      loading,\n      error\n    }) => {\n      return React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: event => this.handleSubmit(event, SigninUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: this.handleChange,\n        className: \"input is-primary is-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: this.handleChange,\n        className: \"input is-primary is-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"button is-primary is-rounded\",\n        disabled: loading || this.validateForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Submit\"), error && React.createElement(\"p\", {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Signin);","map":{"version":3,"sources":["/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/Components/Auth/Signin.js"],"names":["React","withRouter","Mutation","SIGNIN_USER","initialState","username","password","Signin","Component","state","clearState","setState","handleChange","event","target","name","value","handleSubmit","SigninUser","preventDefault","then","data","localStorage","setItem","signinUser","token","props","refetch","history","push","validateForm","isInvalid","render","loading","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,KADmC,qBAE9BL,YAF8B;;AAAA,SAKnCM,UALmC,GAKtB,MAAM;AACjB,WAAKC,QAAL,mBAAmBP,YAAnB;AACD,KAPkC;;AAAA,SASnCQ,YATmC,GASpBC,KAAK,IAAI;AAAA,4BACEA,KAAK,CAACC,MADR;AAAA,YACdC,IADc,iBACdA,IADc;AAAA,YACRC,KADQ,iBACRA,KADQ;AAEtB,WAAKL,QAAL,CAAc;AACZ,SAACI,IAAD,GAAQC;AADI,OAAd;AAGD,KAdkC;;AAAA,SAgBnCC,YAhBmC,GAgBpB,CAACJ,KAAD,EAAQK,UAAR,KAAuB;AACpCL,MAAAA,KAAK,CAACM,cAAN;AAEAD,MAAAA,UAAU,GAAGE,IAAb,CAAkB,OAAO;AAAEC,QAAAA;AAAF,OAAP,KAAoB;AACpC;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,UAAL,CAAgBC,KAA9C;AACA,cAAM,KAAKC,KAAL,CAAWC,OAAX,EAAN;AACA,aAAKjB,UAAL;AACA,aAAKgB,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAND;AAOD,KA1BkC;;AAAA,SA4BnCC,YA5BmC,GA4BpB,MAAM;AAAA,0BACY,KAAKrB,KADjB;AAAA,YACXJ,QADW,eACXA,QADW;AAAA,YACDC,QADC,eACDA,QADC;AAEnB,YAAMyB,SAAS,GAAG,CAAC1B,QAAD,IAAa,CAACC,QAAhC;AACA,aAAOyB,SAAP;AACD,KAhCkC;AAAA;;AAkCnCC,EAAAA,MAAM,GAAG;AAAA,yBACwB,KAAKvB,KAD7B;AAAA,UACCJ,QADD,gBACCA,QADD;AAAA,UACWC,QADX,gBACWA,QADX;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,WAApB;AAAiC,MAAA,SAAS,EAAE;AAAEE,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACY,UAAD,EAAa;AAAEG,MAAAA,IAAF;AAAQY,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAb,KAA0C;AACzC,aACE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,QAAQ,EAAErB,KAAK,IAAI,KAAKI,YAAL,CAAkBJ,KAAlB,EAAyBK,UAAzB,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,KAAK,EAAEb,QAJT;AAKE,QAAA,QAAQ,EAAE,KAAKO,YALjB;AAME,QAAA,SAAS,EAAC,6BANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAaE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,KAAK,EAAEN,QAJT;AAKE,QAAA,QAAQ,EAAE,KAAKM,YALjB;AAME,QAAA,SAAS,EAAC,6BANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAsBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,QAAQ,EAAEqB,OAAO,IAAI,KAAKH,YAAL,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,EA6BGI,KAAK,IAAI;AAAG,QAAA,KAAK,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BZ,CADF;AAiCD,KAnCH,CAHF,CAFF,EA2CE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,CADF,CADF;AAiDD;;AAtFkC;;AAyFrC,eAAejC,UAAU,CAACM,MAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\nimport { SIGNIN_USER } from \"../../queries\";\n\nconst initialState = {\n  username: \"\",\n  password: \"\"\n};\n\nclass Signin extends React.Component {\n  state = {\n    ...initialState\n  };\n\n  clearState = () => {\n    this.setState({ ...initialState });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = (event, SigninUser) => {\n    event.preventDefault();\n\n    SigninUser().then(async ({ data }) => {\n      // console.log(data);\n      localStorage.setItem(\"token\", data.signinUser.token);\n      await this.props.refetch();\n      this.clearState();\n      this.props.history.push(\"/\");\n    });\n  };\n\n  validateForm = () => {\n    const { username, password } = this.state;\n    const isInvalid = !username || !password;\n    return isInvalid;\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column\"></div>\n          <div className=\"column\">\n            <h2>Signin</h2>\n            <div className=\"box\"></div>\n            <Mutation mutation={SIGNIN_USER} variables={{ username, password }}>\n              {(SigninUser, { data, loading, error }) => {\n                return (\n                  <form\n                    className=\"form\"\n                    onSubmit={event => this.handleSubmit(event, SigninUser)}\n                  >\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"Username\"\n                      value={username}\n                      onChange={this.handleChange}\n                      className=\"input is-primary is-rounded\"\n                    />\n\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={this.handleChange}\n                      className=\"input is-primary is-rounded\"\n                    />\n\n                    <button\n                      type=\"submit\"\n                      className=\"button is-primary is-rounded\"\n                      disabled={loading || this.validateForm()}\n                    >\n                      Submit\n                    </button>\n                    {error && <p error={error}></p>}\n                  </form>\n                );\n              }}\n            </Mutation>\n          </div>\n          <div className=\"column\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n"]},"metadata":{},"sourceType":"module"}