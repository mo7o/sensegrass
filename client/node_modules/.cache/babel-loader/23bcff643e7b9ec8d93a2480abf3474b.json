{"ast":null,"code":"import _objectSpread from \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/Components/Auth/Signup.js\";\nimport React from \"react\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\nimport { SIGNUP_USER } from \"../../queries\";\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n};\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n\n    this.clearState = () => {\n      this.setState(_objectSpread({}, initialState));\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = (event, signupUser) => {\n      event.preventDefault();\n      signupUser().then(async ({\n        data\n      }) => {\n        console.log(data);\n        localStorage.setItem(\"token\", data.signupUser.token);\n        await this.props.refetch();\n        this.clearState();\n        this.props.history.push(\"/\");\n      });\n    };\n\n    this.validateForm = () => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            password = _this$state.password,\n            passwordConfirmation = _this$state.passwordConfirmation;\n      const isInvalid = !username || !email || !password || password !== passwordConfirmation;\n      return isInvalid;\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConfirmation = _this$state2.passwordConfirmation;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(Mutation, {\n      mutation: SIGNUP_USER,\n      variables: {\n        username,\n        email,\n        password\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, (signupUser, {\n      data,\n      loading,\n      error\n    }) => {\n      return React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: event => this.handleSubmit(event, signupUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: this.handleChange,\n        className: \"input is-primary is-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: this.handleChange,\n        className: \"input is-primary is-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: this.handleChange,\n        className: \"input is-primary is-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"passwordConfirmation\",\n        placeholder: \"Confirm Password\",\n        value: passwordConfirmation,\n        onChange: this.handleChange,\n        className: \"input is-primary is-rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"button is-primary is-rounded\",\n        disabled: loading || this.validateForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Submit\"), error && React.createElement(\"p\", {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"notification is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Already have an account?\"))))), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Signup);","map":{"version":3,"sources":["/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/Components/Auth/Signup.js"],"names":["React","withRouter","NavLink","Mutation","SIGNUP_USER","initialState","username","email","password","passwordConfirmation","Signup","Component","state","clearState","setState","handleChange","event","target","name","value","handleSubmit","signupUser","preventDefault","then","data","console","log","localStorage","setItem","token","props","refetch","history","push","validateForm","isInvalid","render","loading","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { Mutation } from \"react-apollo\";\nimport { SIGNUP_USER } from \"../../queries\";\n\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n};\n\nclass Signup extends React.Component {\n  state = {\n    ...initialState\n  };\n\n  clearState = () => {\n    this.setState({ ...initialState });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = (event, signupUser) => {\n    event.preventDefault();\n\n    signupUser().then(async ({ data }) => {\n      console.log(data);\n      localStorage.setItem(\"token\", data.signupUser.token);\n      await this.props.refetch();\n      this.clearState();\n      this.props.history.push(\"/\");\n    });\n  };\n\n  validateForm = () => {\n    const { username, email, password, passwordConfirmation } = this.state;\n    const isInvalid =\n      !username || !email || !password || password !== passwordConfirmation;\n    return isInvalid;\n  };\n\n  render() {\n    const { username, email, password, passwordConfirmation } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column\"></div>\n          <div className=\"column\">\n            <div className=\"box has-text-centered\">\n              <h1 className=\"title\">Signup</h1>\n              <Mutation\n                mutation={SIGNUP_USER}\n                variables={{ username, email, password }}\n              >\n                {(signupUser, { data, loading, error }) => {\n                  return (\n                    <form\n                      className=\"form\"\n                      onSubmit={event => this.handleSubmit(event, signupUser)}\n                    >\n                      <div class=\"field\">\n                        <div class=\"control\">\n                          <input\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={this.handleChange}\n                            className=\"input is-primary is-rounded\"\n                          />\n                        </div>\n                      </div>\n                      <div class=\"field\">\n                        <div class=\"control\">\n                          <input\n                            type=\"email\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={this.handleChange}\n                            className=\"input is-primary is-rounded\"\n                          />\n                        </div>\n                      </div>\n                      <div class=\"field\">\n                        <div class=\"control\">\n                          <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            className=\"input is-primary is-rounded\"\n                          />\n                        </div>\n                      </div>\n                      <div class=\"field\">\n                        <div class=\"control\">\n                          <input\n                            type=\"password\"\n                            name=\"passwordConfirmation\"\n                            placeholder=\"Confirm Password\"\n                            value={passwordConfirmation}\n                            onChange={this.handleChange}\n                            className=\"input is-primary is-rounded\"\n                          />\n                        </div>\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"button is-primary is-rounded\"\n                        disabled={loading || this.validateForm()}\n                      >\n                        Submit\n                      </button>\n                      {error && <p error={error}></p>}\n                    </form>\n                  );\n                }}\n              </Mutation>\n              <div class=\"field\">\n                <div class=\"notification is-primary\">\n                  <NavLink to=\"/signin\">Already have an account?</NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n"]},"metadata":{},"sourceType":"module"}