{"ast":null,"code":"import _objectSpread from \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/Components/Auth/Signup.js\";\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { SIGNUP_USER } from \"../../queries\";\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n};\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n\n    this.clearState = () => {\n      this.setState(_objectSpread({}, initialState));\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = (event, signupUser) => {\n      event.preventDefault();\n      signupUser().then(data => {\n        console.log(data);\n        this.clearState();\n      });\n    };\n\n    this.validateForm = () => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            password = _this$state.password,\n            passwordConfirmation = _this$state.passwordConfirmation;\n      const isInvalid = !username || !email || !password || !passwordConfirmation;\n      return is;\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConfirmation = _this$state2.passwordConfirmation;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Signup\"), React.createElement(Mutation, {\n      mutation: SIGNUP_USER,\n      variables: {\n        username,\n        email,\n        password\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, (signupUser, {\n      data,\n      loading,\n      error\n    }) => {\n      return React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: event => this.handleSubmit(event, signupUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"passwordConfirmation\",\n        placeholder: \"Confirm Password\",\n        value: passwordConfirmation,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: loading || this.validateForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Submit\"), error && React.createElement(\"p\", {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/Components/Auth/Signup.js"],"names":["React","Mutation","SIGNUP_USER","initialState","username","email","password","passwordConfirmation","Signup","Component","state","clearState","setState","handleChange","event","target","name","value","handleSubmit","signupUser","preventDefault","then","data","console","log","validateForm","isInvalid","is","render","loading","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { SIGNUP_USER } from \"../../queries\";\n\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirmation: \"\"\n};\n\nclass Signup extends React.Component {\n  state = {\n    ...initialState\n  };\n\n  clearState = () => {\n    this.setState({ ...initialState });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = (event, signupUser) => {\n    event.preventDefault();\n\n    signupUser().then(data => {\n      console.log(data);\n      this.clearState();\n    });\n  };\n\n  validateForm = () => {\n    const { username, email, password, passwordConfirmation } = this.state;\n    const isInvalid = !username || !email || !password || !passwordConfirmation;\n    return is\n  };\n\n  render() {\n    const { username, email, password, passwordConfirmation } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h2 className=\"App\">Signup</h2>\n        <Mutation\n          mutation={SIGNUP_USER}\n          variables={{ username, email, password }}\n        >\n          {(signupUser, { data, loading, error }) => {\n            return (\n              <form\n                className=\"form\"\n                onSubmit={event => this.handleSubmit(event, signupUser)}\n              >\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  value={username}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"password\"\n                  name=\"passwordConfirmation\"\n                  placeholder=\"Confirm Password\"\n                  value={passwordConfirmation}\n                  onChange={this.handleChange}\n                />\n                <button type=\"submit\" disabled={loading || this.validateForm()}>\n                  Submit\n                </button>\n                {error && <p error={error}></p>}\n              </form>\n            );\n          }}\n        </Mutation>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}