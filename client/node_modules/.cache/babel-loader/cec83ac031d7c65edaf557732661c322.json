{"ast":null,"code":"var _jsxFileName = \"/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport Signin from \"./Components/Auth/Signin\";\nimport Signup from \"./Components/Auth/Signup\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4444/graphql\",\n  //   to send token to backend\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"token\");\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({\n    networkError\n  }) => {\n    if (networkError) {\n      console.log();\n    }\n  }\n});\n\nconst Root = () => React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  exact: true,\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/signin\",\n  component: Signin,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/signup\",\n  component: Signup,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(Redirect, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n})));\n\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/mohitmojo/Downloads/Sensegrass/Learnings/graphql/graphql-project/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Router","Route","Switch","Redirect","App","Signin","Signup","ApolloClient","ApolloProvider","client","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","authorization","onError","networkError","console","log","Root","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE,+BADyB;AAG9B;AACAC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GAJgB;AAO9BC,EAAAA,OAAO,EAAEC,SAAS,IAAI;AACpB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL;AADR;AADU,KAArB;AAKD,GAd6B;AAe9BM,EAAAA,OAAO,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAoB;AACzB,QAAGA,YAAH,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR;AAEH;AACJ;AApB6B,CAAjB,CAAf;;AAuBA,MAAMC,IAAI,GAAG,MACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,KAAK,MAArB;AAAsB,EAAA,SAAS,EAAErB,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,SAAZ;AAAsB,EAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,SAAZ;AAAsB,EAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,QAAD;AAAU,EAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADF;;AAWAR,QAAQ,CAAC4B,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEjB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport Signin from \"./Components/Auth/Signin\";\nimport Signup from \"./Components/Auth/Signup\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4444/graphql\",\n\n  //   to send token to backend\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"token\");\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({networkError}) => {\n      if(networkError) {\n          console.log();\n          \n      }\n  }\n});\n\nconst Root = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/signin\" component={Signin} />\n      <Route path=\"/signup\" component={Signup} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Root />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}